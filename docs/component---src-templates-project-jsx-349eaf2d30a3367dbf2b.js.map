{"version":3,"sources":["webpack:///./src/components/Nav.jsx","webpack:///./src/utils/animate.js","webpack:///./src/templates/project.jsx"],"names":["Nav","additionalText","pages","allSitePage","nodes","map","path","key","to","getProps","isCurrent","className","additionalTextOptions","additionalProjectTextIndex","Math","floor","random","length","additionalProjectText","fadeOutElementSelector","selectorQuery","cb","document","querySelector","classList","add","setTimeout","fadeOutAllElementsSelector","selectorQueryAll","querySelectorAll","forEach","element","Template","data","context","html","title","description","useState","isNavFullScreen","setIsNavFullScreen","toggleIsNavFullScreen","CloseNavButton","type","onClick","navigate","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"wJAuEeA,IAlEH,SAAC,GAA6B,IAAD,IAA1BC,sBAA0B,MAAT,GAAS,EAajCC,EAbiC,OAC/BC,YAYkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAKrC,OACE,wBAAIC,IAAKD,GACP,kBAAC,OAAD,CAAME,GAAIF,EAAMG,SANH,SAAC,GAChB,OADkC,EAAhBC,UACC,CAAEC,UAAW,mBAAsB,KAMjDL,OAMHM,EAAwB,CAC5B,mBACA,cACA,eACA,YACA,qBACA,uBACA,gBACA,aACA,cACA,gBACA,aACA,oBACA,uBACA,uBACA,sBACA,iBACA,eACA,wBACA,oBACA,sBACA,YACA,mBACA,wBAGIC,EAA6BC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAsBK,QAC9EC,EAAwBjB,GAAkBW,EAAsBC,GAEtE,OACE,yBAAKF,UAAU,cACb,4BACE,4BAAQO,EAAR,KACChB,M,6DCjET,oEAAO,IAEMiB,EAAyB,SAACC,EAAeC,QAAkB,IAAlBA,MAAK,cACzCC,SAASC,cAAcH,GAC/BI,UAAUC,IAAI,YACtBC,WAAWL,EAL8B,MAQ9BM,EAA6B,SAACC,EAAkBP,QAAkB,IAAlBA,MAAK,cAC/CC,SAASO,iBAAiBD,GAClCE,SAAQ,SAACC,GAChBA,EAAQP,UAAUC,IAAI,eAExBC,WAAWL,EAb8B,O,4OCA3C,4KAOe,SAASW,EAAT,GAEX,IAAD,IADDC,KAEQ9B,YAAeC,MACoB,GAAG8B,QAAtCC,EAFP,EAEOA,KAAMC,EAFb,EAEaA,MAAOC,EAFpB,EAEoBA,YAFpB,EAI6CC,oBAAS,GAAhDC,EAJN,KAIuBC,EAJvB,KAMKC,EAAwB,WAC5BD,GAAoBD,IAGhBG,EAAiB,WACrB,OACE,4BACE/B,UAAU,mBACVgC,KAAK,SACLC,QAASH,GAHX,UAUJ,OACE,yBAAK9B,UAAU,2BACb,kBAAC,IAAD,CAAKyB,MAAOA,IACZ,4BACEzB,UAAU,sBACVgC,KAAK,SACLC,QAAS,WACPzB,YAAuB,oBAAoB,kBAAM0B,mBAAS,UAJ9D,MASA,yBAAKlC,UAAU,uBACb,4BAAKyB,GAEL,uBAAGU,wBAAyB,CAAEC,OAAQV,KACtC,yBAAK1B,UAAU,oBACb,4BACEgC,KAAK,SACLC,QAASH,GAFX,yBAQJ,wBAAI9B,UAAU,mBACd,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,kBAAkBmC,wBAAyB,CAAEC,OAAQZ,KACpE,yBAAKxB,UAAS,gBAAiB4B,EAAkB,cAAgB,KAC/D,kBAAC,IAAD,MACCA,GAAmB,kBAACG,EAAD,SAOvB,IAAMM,EAAS","file":"component---src-templates-project-jsx-349eaf2d30a3367dbf2b.js","sourcesContent":["import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nimport '../styles/nav.scss';\n\nconst Nav = ({ additionalText = '' }) => {\n  const { allSitePage } = useStaticQuery(\n    graphql`\n      query {\n          allSitePage(filter: {context: {fromMarkDown: {eq: true}}}) {\n              nodes {\n              path\n            }\n          }\n      }\n    `,\n  );\n\n  const pages = allSitePage.nodes.map(({ path }) => {\n    const isActive = ({ isCurrent }) => {\n      return isCurrent ? { className: 'is-current-page' } : {};\n    };\n\n    return (\n      <li key={path}>\n        <Link to={path} getProps={isActive}>\n          {path}\n        </Link>\n      </li>\n    );\n  });\n\n  const additionalTextOptions = [\n    'other good stuff',\n    'more to see',\n    'check it out',\n    'also good',\n    'hey, look at these',\n    'nice, right? look at',\n    'more projects',\n    'more links',\n    'hey... also',\n    'more projects',\n    'additional',\n    'clicky click more',\n    'some more good stuff',\n    'like that? more here',\n    'you might also like',\n    'other projects',\n    'more from me',\n    'james also made these',\n    'I also made these',\n    'you can click these',\n    'view more',\n    'ta-da! more here',\n    'links to other stuff',\n  ];\n\n  const additionalProjectTextIndex = Math.floor(Math.random() * additionalTextOptions.length);\n  const additionalProjectText = additionalText || additionalTextOptions[additionalProjectTextIndex];\n\n  return (\n    <nav className=\"nav-common\">\n      <ul>\n        <li>{`${additionalProjectText}:`}</li>\n        {pages}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","export const DEFAULT_ANIMATE_DURATION_MS = 400;\n\nexport const fadeOutElementSelector = (selectorQuery, cb = () => {}) => {\n  const element = document.querySelector(selectorQuery);\n  element.classList.add('fade-out');\n  setTimeout(cb, DEFAULT_ANIMATE_DURATION_MS);\n};\n\nexport const fadeOutAllElementsSelector = (selectorQueryAll, cb = () => {}) => {\n  const elements = document.querySelectorAll(selectorQueryAll);\n  elements.forEach((element) => {\n    element.classList.add('fade-out');\n  });\n  setTimeout(cb, DEFAULT_ANIMATE_DURATION_MS);\n};\n","import React, { useState } from 'react';\nimport { navigate, graphql } from 'gatsby';\nimport { fadeOutElementSelector } from '../utils/animate';\nimport Nav from '../components/Nav';\nimport SEO from '../components/Seo';\nimport '../styles/project.scss';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { allSitePage: { nodes } } = data;\n  const { html, title, description } = nodes[0].context;\n\n  const [isNavFullScreen, setIsNavFullScreen] = useState(false);\n\n  const toggleIsNavFullScreen = () => {\n    setIsNavFullScreen(!isNavFullScreen);\n  };\n\n  const CloseNavButton = () => {\n    return (\n      <button\n        className=\"close-nav-button\"\n        type=\"button\"\n        onClick={toggleIsNavFullScreen}\n      >\n        close\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"project-wrapper fade-in\">\n      <SEO title={title} />\n      <button\n        className=\"project-exit shadow\"\n        type=\"button\"\n        onClick={() => {\n          fadeOutElementSelector('.project-wrapper', () => navigate('/'));\n        }}\n      >\n        ✕︎\n      </button>\n      <div className=\"project-description\">\n        <h2>{title}</h2>\n        {/* eslint-disable-next-line react/no-danger */}\n        <p dangerouslySetInnerHTML={{ __html: description }} />\n        <div className=\"view-more-mobile\">\n          <button\n            type=\"button\"\n            onClick={toggleIsNavFullScreen}\n          >\n            View other projects\n          </button>\n        </div>\n      </div>\n      <hr className=\"mobile-divider\" />\n      <div className=\"project-content\">\n        {/* eslint-disable-next-line react/no-danger */}\n        <div className=\"project-md-html\" dangerouslySetInnerHTML={{ __html: html }} />\n        <div className={`project-nav ${isNavFullScreen ? 'full-screen' : ''}`}>\n          <Nav />\n          {isNavFullScreen && <CloseNavButton />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n      allSitePage(filter: {path: {eq: $path}, context: {fromMarkDown: {eq: true}}}) {\n        nodes {\n          context {\n            html\n            title\n            description\n          }\n        }\n      }\n  }\n`;\n"],"sourceRoot":""}