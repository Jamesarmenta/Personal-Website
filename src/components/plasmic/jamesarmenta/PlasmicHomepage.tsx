// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: uqLoCtoBYZiDt8D79DKGpo
// Component: wOb-BEgH1SQYh

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  usePlasmicDataConfig,
  executePlasmicDataOp,
  usePlasmicDataOp
} from "@plasmicapp/react-web/lib/data-sources";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import RandomPadRow from "../../RandomPadRow"; // plasmic-import: aFfmChWFbD/component
import Project from "../../Project"; // plasmic-import: KwQ1p6f9F4I/component
import ProjectTabItem from "../../ProjectTabItem"; // plasmic-import: JKE3W8Wul_/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources"; // plasmic-import: UHJm5O7-HT/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_jamesarmenta.module.css"; // plasmic-import: uqLoCtoBYZiDt8D79DKGpo/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: wOb-BEgH1SQYh/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: wHcs7bjYL/icon

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  freeBox?: p.Flex<"div">;
  svg?: p.Flex<"svg">;
  ntc?: p.Flex<typeof RandomPadRow>;
  casa?: p.Flex<typeof RandomPadRow>;
  contactme?: p.Flex<typeof RandomPadRow>;
  of?: p.Flex<typeof RandomPadRow>;
  glass?: p.Flex<typeof RandomPadRow>;
  insta?: p.Flex<typeof RandomPadRow>;
  sixfold?: p.Flex<typeof RandomPadRow>;
  collage?: p.Flex<typeof RandomPadRow>;
  footer?: p.Flex<typeof RandomPadRow>;
};

export interface DefaultHomepageProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <RandomPadRow
            className={classNames("__wab_instance", sty.randomPadRow__up0CX)}
          >
            {true ? (
              <div
                data-plasmic-name={"freeBox"}
                data-plasmic-override={overrides.freeBox}
                className={classNames(projectcss.all, sty.freeBox)}
              >
                <IconIcon
                  data-plasmic-name={"svg"}
                  data-plasmic-override={overrides.svg}
                  className={classNames(projectcss.all, sty.svg)}
                  role={"img"}
                />
              </div>
            ) : null}
          </RandomPadRow>
          <RandomPadRow
            className={classNames("__wab_instance", sty.randomPadRow__btDGr)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kEiSh
              )}
            >
              {
                "James Armenta is an artist and software engineer from San Diego, California."
              }
            </div>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"ntc"}
            data-plasmic-override={overrides.ntc}
            className={classNames("__wab_instance", sty.ntc)}
          >
            <Project
              className={classNames("__wab_instance", sty.project__cZkdk)}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <React.Fragment>
                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem___7GLyc
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__lphUs)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/ntc1Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab2" as const}
                      tabname={"tab1" as const}
                      text={"Mural for NTC Liberty Station\nSan Diego, 2020"}
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__wozvn
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__soK15)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/ntc2Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab3" as const}
                      tabname={"tab2" as const}
                      text={
                        'A response to the prompt "Anchored in Hope", the design uses maritime signal flags flanked by dazzle camouflage to communicate a message.\n'
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__elws1
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__lLvOu)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/ntc3Jpg.jpg",
                            fullWidth: 900,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab4" as const}
                      tabname={"tab3" as const}
                      text={
                        "Maritime signal flags have long been used as a system of communication between ships. Each flag represents a different letter of the alphabet. "
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__xqrKq
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___18Gjt)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={
                            "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExY2I3ZWE5ZWFmODMzZWU2NmU4Y2RlNTg5YWFkNTMyYzUzNWM0NjQwNSZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/tuXpZlumsaOmzmSikn/giphy.gif" as const
                          }
                        />
                      }
                      tabdestination={"tab1" as const}
                      tabname={"tab4" as const}
                      text={
                        "Dazzle camouflage, on the other hand, was a disruptive pattern used by ships and planes in both World Wars. The bold, staggered stripes obfuscate a vessel\u2019s speed and direction to enemies."
                      }
                    />
                  </React.Fragment>
                )}
              </ph.DataCtxReader>
            </Project>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"casa"}
            data-plasmic-override={overrides.casa}
            className={classNames("__wab_instance", sty.casa)}
          >
            <Project
              className={classNames("__wab_instance", sty.project__tuTmE)}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <React.Fragment>
                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem___6FRXv
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__qmgju)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/casa1Jpg.jpg",
                            fullWidth: 866,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab2" as const}
                      tabname={"tab1" as const}
                      text={"Mural for Casa Familiar\nSan Ysidro, 2021"}
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__tpiAm
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__jfOjm)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/casa2Jpg.jpg",
                            fullWidth: 900,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab3" as const}
                      tabname={"tab2" as const}
                      text={
                        "With colorful reference to Josef Albers\u2019 \u201cHomage to the Square\u201d, this concept uses movement and color as a depiction of density when measured by social exchanges."
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__tTO
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__dUcoe)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/casa3Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab4" as const}
                      tabname={"tab3" as const}
                      text={
                        "The tear in color mimics the San Diego - Tijuana border as found on a map."
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__shJgP
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__bkir)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/casa4Jpg.jpg",
                            fullWidth: 950,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab1" as const}
                      tabname={"tab4" as const}
                      text={"Concept renderings"}
                    />
                  </React.Fragment>
                )}
              </ph.DataCtxReader>
            </Project>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"contactme"}
            data-plasmic-override={overrides.contactme}
            className={classNames("__wab_instance", sty.contactme)}
          >
            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__biWj5
              )}
              component={Link}
              href={"mailto:armentajames@gmail.com" as const}
              platform={"nextjs"}
            >
              {"Contact me\u2197"}
            </p.PlasmicLink>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"of"}
            data-plasmic-override={overrides.of}
            className={classNames("__wab_instance", sty.of)}
          >
            <Project
              className={classNames("__wab_instance", sty.project__iwF2)}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <React.Fragment>
                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__q8UGt
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__t3ZWj)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/of1Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab2" as const}
                      tabname={"tab1" as const}
                      text={"Mural for Original Form\nSan Diego, 2021"}
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__vQKz
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__wvtdr)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/of2Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 900,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab3" as const}
                      tabname={"tab2" as const}
                      text={
                        "The brief for this mural came from a quote from Ray and Charles Eames."
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__t3Gaa
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zMdu)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/of3Jpg.jpg",
                            fullWidth: 965,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab4" as const}
                      tabname={"tab3" as const}
                      text={
                        "Given the prompt, the mural design re-purposes an Arts & Architecture magazine cover designed by the famous designer duo."
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__fYntC
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__brmU9)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/of4Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 617,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab1" as const}
                      tabname={"tab4" as const}
                      text={"Concept renderings"}
                    />
                  </React.Fragment>
                )}
              </ph.DataCtxReader>
            </Project>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"glass"}
            data-plasmic-override={overrides.glass}
            className={classNames("__wab_instance", sty.glass)}
          >
            <Project
              className={classNames("__wab_instance", sty.project__j7Js4)}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <React.Fragment>
                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__wxhKg
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__nfYwn)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/glass1Jpg.jpg",
                            fullWidth: 900,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab2" as const}
                      tabname={"tab1" as const}
                      text={
                        "Self-Portraits Through Sea Glass\nPhotos taken using found sea glass as a filter. Unedited.\nItaly, 2022"
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem___3ExgW
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__jXi8D)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/glass2Jpg.jpg",
                            fullWidth: 900,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab3" as const}
                      tabname={"tab2" as const}
                      text={
                        "Self-Portraits Through Sea Glass\nPhotos taken using found sea glass as a filter. Unedited.\nItaly, 2022"
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem___4TrCm
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___8JqSy)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/glass3Jpg.jpg",
                            fullWidth: 900,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab4" as const}
                      tabname={"tab3" as const}
                      text={
                        "Self-Portraits Through Sea Glass\nPhotos taken using found sea glass as a filter. Unedited.\nItaly, 2022"
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__zhsBn
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vbVn)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/glass4Jpg.jpg",
                            fullWidth: 900,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab1" as const}
                      tabname={"tab4" as const}
                      text={
                        "Self-Portraits Through Sea Glass\nPhotos taken using found sea glass as a filter. Unedited.\nItaly, 2022"
                      }
                    />
                  </React.Fragment>
                )}
              </ph.DataCtxReader>
            </Project>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"insta"}
            data-plasmic-override={overrides.insta}
            className={classNames("__wab_instance", sty.insta)}
          >
            <p.PlasmicLink
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__tCluq
              )}
              component={Link}
              href={"https://www.instagram.com/jamesarmenta/" as const}
              platform={"nextjs"}
              target={"_blank" as const}
            >
              {"@jamesarmenta\u2197"}
            </p.PlasmicLink>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"sixfold"}
            data-plasmic-override={overrides.sixfold}
            className={classNames("__wab_instance", sty.sixfold)}
          >
            <Project
              className={classNames("__wab_instance", sty.project__mYa0P)}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <React.Fragment>
                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__mcz46
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oB9G)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={
                            "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExYjk1MTI3YWU5N2ZlOGFlNTU2OTE2MDY5ZjdlOWY1MzJmNTliYjE1NSZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/Yz3EModJlsNZAtarrY/giphy.gif" as const
                          }
                        />
                      }
                      tabdestination={"tab2" as const}
                      tabname={"tab1" as const}
                      text={
                        "Sixfold Symmetry Exhibition Site\nSaratoga Springs, 2016"
                      }
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__lByga
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___625R1)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={
                            "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExNmNmMWU3NjI0MmNmYmZlNjI1YWZmM2RmZTdkZGRkNmQ4ZTVmMGViYiZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/wsSuXBWjdHI1r7AK12/giphy.gif" as const
                          }
                        />
                      }
                      tabdestination={"tab1" as const}
                      tabname={"tab2" as const}
                      text={
                        "Created for an art exhibition about the intersection of art and science.\n\nEach exhibit item is rendered as concentric boxes, with colors representing the percentage of colors in the item.\n\nEach item self-organizes its position on the site based on the number of views it receives."
                      }
                    />
                  </React.Fragment>
                )}
              </ph.DataCtxReader>
            </Project>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"collage"}
            data-plasmic-override={overrides.collage}
            className={classNames("__wab_instance", sty.collage)}
          >
            <Project
              className={classNames("__wab_instance", sty.project__u8O2B)}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <React.Fragment>
                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__akWb
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__wlzIw)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/collage1Jpg.jpg",
                            fullWidth: 1199,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab2" as const}
                      tabname={"tab1" as const}
                      text={"Selected Collage Works"}
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__mJdt9
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__paeD)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/collage2Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 750,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab3" as const}
                      tabname={"tab2" as const}
                      text={"Selected Collage Works"}
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__yu16E
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__psox5)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/collage3Jpg.jpg",
                            fullWidth: 789,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab4" as const}
                      tabname={"tab3" as const}
                      text={"Selected Collage Works"}
                    />

                    <ProjectTabItem
                      className={classNames(
                        "__wab_instance",
                        sty.projectTabItem__wKpn1
                      )}
                      img={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oBq6F)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"eager" as const}
                          src={{
                            src: "/plasmic/jamesarmenta/images/collage4Jpg.jpg",
                            fullWidth: 1200,
                            fullHeight: 750,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      tabdestination={"tab1" as const}
                      tabname={"tab4" as const}
                      text={"Selected Collage Works"}
                    />
                  </React.Fragment>
                )}
              </ph.DataCtxReader>
            </Project>
          </RandomPadRow>
          <RandomPadRow
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eTkrC
              )}
            >
              {"thank you, thank you"}
            </div>
          </RandomPadRow>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "freeBox",
    "svg",
    "ntc",
    "casa",
    "contactme",
    "of",
    "glass",
    "insta",
    "sixfold",
    "collage",
    "footer"
  ],
  freeBox: ["freeBox", "svg"],
  svg: ["svg"],
  ntc: ["ntc"],
  casa: ["casa"],
  contactme: ["contactme"],
  of: ["of"],
  glass: ["glass"],
  insta: ["insta"],
  sixfold: ["sixfold"],
  collage: ["collage"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  freeBox: "div";
  svg: "svg";
  ntc: typeof RandomPadRow;
  casa: typeof RandomPadRow;
  contactme: typeof RandomPadRow;
  of: typeof RandomPadRow;
  glass: typeof RandomPadRow;
  insta: typeof RandomPadRow;
  sixfold: typeof RandomPadRow;
  collage: typeof RandomPadRow;
  footer: typeof RandomPadRow;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    svg: makeNodeComponent("svg"),
    ntc: makeNodeComponent("ntc"),
    casa: makeNodeComponent("casa"),
    contactme: makeNodeComponent("contactme"),
    of: makeNodeComponent("of"),
    glass: makeNodeComponent("glass"),
    insta: makeNodeComponent("insta"),
    sixfold: makeNodeComponent("sixfold"),
    collage: makeNodeComponent("collage"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "James Armenta",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
